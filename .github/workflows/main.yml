name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    services:
      sonarqube:
        image: sonarqube:latest
        ports:
          - 9000:9000

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
        
    - name: Install dependencies
      run: npm install
        
    - name: Run tests
      run: npm test

    - name: Wait for SonarQube to start
      run: |
        timeout 300 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:9000)" != "200" ]]; do sleep 5; done'
        
    - name: SonarQube Analysis
      run: |
        npm install -g sonarqube-scanner
        sonar-scanner \
          -Dsonar.host.url=http://localhost:9000 \
          -Dsonar.login=admin \
          -Dsonar.password=admin \
          -Dsonar.projectKey=node-app \
          -Dsonar.sources=. \
          -Dsonar.exclusions=node_modules/**
        
    - name: Build Docker image
      run: docker build -t ${{ env.DOCKER_USERNAME }}/nodeapp:${{ github.sha }} .
        
    - name: Trivy vulnerability scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.DOCKER_USERNAME }}/nodeapp:${{ github.sha }}'
        format: 'table'
        exit-code: '1'
        severity: 'CRITICAL'
        
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}
        
    - name: Push to DockerHub
      run: docker push ${{ env.DOCKER_USERNAME }}/nodeapp:${{ github.sha }}
